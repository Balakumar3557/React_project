https://github.com/ --- > open link

     login and create account --- > open

create a new repository on the command line

     git  -- > check
git --- > command

usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

git init --- > command

     Reinitialized existing Git repository in /Users/devaraj/Desktop/Bala Kumar/Project/react_project/.git/

git status --- > command

On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore
        modified:   README.md
        modified:   package-lock.json
        modified:   package.json
        modified:   public/favicon.ico
        modified:   public/index.html
        modified:   public/logo192.png
        modified:   public/logo512.png
        modified:   public/manifest.json
        modified:   public/robots.txt
        modified:   src/App.css
        modified:   src/App.js
        modified:   src/App.test.js
        modified:   src/index.css
        modified:   src/index.js
        modified:   src/logo.svg
        modified:   src/reportWebVitals.js
        modified:   src/setupTests.js

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        React.txt
        git.txt
        src/app/
        src/assets/

no changes added to commit (use "git add" and/or "git commit -a")

git add . (or) git add package.json

 git commit -m "first commit and change git.txt" 
[master 54a3d61] first commit and change git.txt
 Committer: Deva Raj <devaraj@Devas-MacBook-Air.local>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 20 files changed, 0 insertions(+), 0 deletions(-)
 mode change 100644 => 100755 React.txt
 mode change 100644 => 100755 git.txt
 mode change 100644 => 100755 src/app/Home/Home.css
 mode change 100644 => 100755 src/app/Home/Home.jsx
 mode change 100644 => 100755 src/app/authentication/Login/Login.css
 mode change 100644 => 100755 src/app/authentication/Login/Login.jsx
 mode change 100644 => 100755 src/app/authentication/Registration/Registration.css
 mode change 100644 => 100755 src/app/authentication/Registration/Registration.jsx
 mode change 100644 => 100755 src/app/main/Footer/Footer.css
 mode change 100644 => 100755 src/app/main/Footer/Footer.jsx
 mode change 100644 => 100755 src/app/main/Sidebar/Sidebar.css
 mode change 100644 => 100755 src/app/main/Sidebar/Sidebar.jsx
 mode change 100644 => 100755 src/assets/css/bootstrap/_media.css
 mode change 100644 => 100755 src/assets/css/bootstrap/mixins/_border-radius.css
 mode change 100644 => 100755 src/assets/css/bootstrap/mixins/_screen-reader.css
 mode change 100644 => 100755 src/assets/css/bootstrap/mixins/_visibility.css
 mode change 100644 => 100755 src/assets/css/bootstrap/utilities/_stretched-link.css
 mode change 100644 => 100755 src/assets/css/style.css
 mode change 100644 => 100755 src/assets/images/logo.jpg
 mode change 100644 => 100755 src/assets/scss/style.scss

git branch --- > command
* master 

         how to create branch command
git branch -m main --- > command
git branch        
* main

      how to  add remote 
git remote add origin (repository url) --- > command
      eg; git remote add origin https://github.com/Balakumar3557/React_project.git

git remote --- > command
origin

git remote -v --- > command
origin  https://github.com/Balakumar3557/React_project.git (fetch)
origin  https://github.com/Balakumar3557/React_project.git (push)

      how to Remove remote
git remote Remove origin --- > command

git push origin main  --- > command

Enumerating objects: 35, done.
Counting objects: 100% (35/35), done.
Delta compression using up to 4 threads
Compressing objects: 100% (16/16), done.
Writing objects: 100% (18/18), 1.59 KiB | 13.00 KiB/s, done.
Total 18 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
remote: 
remote: Create a pull request for 'main' on GitHub by visiting:
remote:      https://github.com/Balakumar3557/React_project/pull/new/main
remote: 
To https://github.com/Balakumar3557/React_project.git
 * [new branch]      main -> main

------ >  clone command < -------

git clone (repository url) --- > command

   eg; git clone https://github.com/Balakumar3557/React_project.git

